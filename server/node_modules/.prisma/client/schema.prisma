generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum BookingStatus {
  PENDING
  PAID
  CANCELLED
}

model User {
  id        String   @id @default(cuid())
  fullName  String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reviews  Review[]
  bookings Booking[]
}

model Tag {
  id     String     @id @default(cuid())
  name   String     @unique
  slug   String     @unique
  places PlaceTag[]
}

model Place {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  address     String
  price       Int      @default(0)
  description String?
  imageUrl    String? // ảnh đại diện
  rating      Float    @default(0)
  ratingCount Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tags     PlaceTag[]
  reviews  Review[]
  bookings Booking[]
}

model PlaceTag {
  place   Place  @relation(fields: [placeId], references: [id], onDelete: Cascade)
  placeId String
  tag     Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId   String

  @@id([placeId, tagId])
}

model Review {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  place     Place    @relation(fields: [placeId], references: [id], onDelete: Cascade)
  placeId   String
  rating    Int
  content   String   @default("")
  createdAt DateTime @default(now())

  @@unique([placeId, userId])
}

model Booking {
  id        String        @id @default(cuid())
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  place     Place         @relation(fields: [placeId], references: [id], onDelete: Cascade)
  placeId   String
  visitDate DateTime
  persons   Int
  unitPrice Int
  total     Int
  status    BookingStatus @default(PENDING)
  createdAt DateTime      @default(now())
}
